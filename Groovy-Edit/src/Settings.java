
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Nick
 */
public class Settings extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    //Create Global music player object
    private static musicPlayer player = musicPlayer.getInstance();
    private static String filePath;
    private static String trackTitle;
    private static long clipTimePosition;
    

    private static boolean isPlaying = false;
    private static boolean isLooping = false;

    private FileHandler fileHandle;
    private ArrayList<String> settingsList;

    private String darkMode;

    public Settings() {
        initComponents();

        fileHandle = new FileHandler("settings.txt", ".txt");
        settingsList = fileHandle.getContentsArry();

        if (settingsList.isEmpty()) {
            // File has not been written to yet
            settingsList.add("Disable"); // dark mode toggle : index 0
            settingsList.add("-16777216"); // default text color (black in this case) in rgb : index 1
            fileHandle.writeTxtFile(fileHandle.arraylistToString(settingsList)); // save the new file
        } else {
            // Set settings page to match previously saved settings
            changeDarkMode(settingsList.get(0)); // will be either "Enable" or "Disable"
            String rgb = settingsList.get(1);
            Color savedColor = new Color(Integer.parseInt(rgb));
            System.out.println(rgb);
            lblTextTest.setForeground(savedColor);
        }

        System.out.println(isPlaying);
        // Music Stuff
        player.loadMusic(filePath);
        if (isPlaying) {
            // There is currently music playing
            fileLocationField.setText(filePath);
        } else {
            // Nothing is playing
            filePath = "";
            trackTitle = "";
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDark = new javax.swing.JLabel();
        lblDefaultTxtColor = new javax.swing.JLabel();
        lblMusic = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnPlayPause = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        tglDark = new javax.swing.JToggleButton();
        btnSelectColor = new javax.swing.JButton();
        lblTextTest = new javax.swing.JLabel();
        fileLocationField = new javax.swing.JTextField();
        btn_Browse = new javax.swing.JButton();
        btnPlayPause1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");

        lblDark.setText("Dark Mode");

        lblDefaultTxtColor.setText("Default Text Color");
        lblDefaultTxtColor.setToolTipText("");

        lblMusic.setText("Music:");
        lblMusic.setAutoscrolls(true);

        btnBack.setText("⏮");
        btnBack.setToolTipText("Restart");
        btnBack.setOpaque(false);

        btnPlayPause.setText("▶⏸");
        btnPlayPause.setToolTipText("Play/Pause");
        btnPlayPause.setOpaque(false);
        btnPlayPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayPauseActionPerformed(evt);
            }
        });

        btnNext.setText("⏭");
        btnNext.setToolTipText("Next");
        btnNext.setOpaque(false);

        tglDark.setText("Enable");
        tglDark.setToolTipText("Enable Dark Mode");
        tglDark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglDarkActionPerformed(evt);
            }
        });

        btnSelectColor.setText("Choose");
        btnSelectColor.setToolTipText("Choose Text Color");
        btnSelectColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectColorActionPerformed(evt);
            }
        });

        lblTextTest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTextTest.setText("abc ABC");
        lblTextTest.setToolTipText("Sample text");

        fileLocationField.setText("none");

        btn_Browse.setText("...");
        btn_Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseForMusicFile(evt);
            }
        });

        btnPlayPause1.setText("⏸");
        btnPlayPause1.setToolTipText("Play/Pause");
        btnPlayPause1.setOpaque(false);
        btnPlayPause1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayPause1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDark)
                                    .addComponent(lblDefaultTxtColor))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tglDark, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSelectColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMusic)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fileLocationField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_Browse, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTextTest)
                        .addContainerGap(133, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(18, 18, 18)
                                .addComponent(btnPlayPause)
                                .addGap(18, 18, 18)
                                .addComponent(btnNext))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(btnPlayPause1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDark)
                    .addComponent(tglDark))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDefaultTxtColor)
                    .addComponent(btnSelectColor)
                    .addComponent(lblTextTest, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMusic)
                    .addComponent(fileLocationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Browse))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnPlayPause)
                    .addComponent(btnNext))
                .addGap(35, 35, 35)
                .addComponent(btnPlayPause1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileLocationField.setEditable(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tglDarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tglDarkActionPerformed
        // When the dark mode toggle is toggled

        changeDarkMode(evt.getActionCommand()); // sends "Enable" or "Disable"
        settingsList.set(0, evt.getActionCommand());
        fileHandle.writeTxtFile(fileHandle.arraylistToString(settingsList));

    }//GEN-LAST:event_tglDarkActionPerformed

    private void btnSelectColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectColorActionPerformed
        // Shows user color chooser. Takes rgb value from chosen color and saves it to the appropriate spot in the settings file

        Color newColor = JColorChooser.showDialog(this, "Select Color", lblTextTest.getForeground());
        lblTextTest.setForeground(newColor);
        int rgb = newColor.getRGB();
        settingsList.set(1, Integer.toString(rgb));
        fileHandle.writeTxtFile(fileHandle.arraylistToString(settingsList));
    }//GEN-LAST:event_btnSelectColorActionPerformed

    private void btnPlayPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayPauseActionPerformed

        if (!filePath.isEmpty()) {
            // A file has been loaded
            int extStart = filePath.indexOf(".");
            if (filePath.substring(extStart).equals(".wav")) {
                if (isPlaying) {
                    // User has paused the audio
                    clipTimePosition = player.clip.getMicrosecondPosition();
                    player.clip.stop();
                    btnPlayPause.setText("▶");
                } else {
                    // User has resumed the audio
                    player.clip.setMicrosecondPosition(clipTimePosition);
                    player.clip.start();
                    btnPlayPause.setText("⏸");
                }
                isPlaying = !isPlaying;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a .wav audio file first.", "Error", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnPlayPauseActionPerformed

    private void browseForMusicFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseForMusicFile
        // TODO add your handling code here:

        final JFileChooser fc = new JFileChooser();

        //Handle open button action.
        int returnVal = fc.showOpenDialog(Settings.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            // retrieve the file from the file selector screen
            File file = fc.getSelectedFile();
            filePath = file.getAbsolutePath();
            fileLocationField.setText(filePath);
            int extStart = filePath.indexOf(".");
            trackTitle = file.getPath().substring(0, extStart);
            if (filePath.substring(extStart).equals(".wav")) {
                player.loadMusic(filePath);
            } else {
                // not a supported file
                JOptionPane.showMessageDialog(null, "Please select a wav file.", "File Compatibility Error", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            System.out.println("Open command cancelled by user." + "\n");
        }

    }//GEN-LAST:event_browseForMusicFile

    private void btnPlayPause1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayPause1ActionPerformed
        clipTimePosition = player.clip.getMicrosecondPosition();
        player.clip.stop();
    }//GEN-LAST:event_btnPlayPause1ActionPerformed

    private void changeDarkMode(String eOrD) {
        if (eOrD.equals("Disable")) {
            tglDark.setText("Enable");
            tglDark.setToolTipText("Enable Dark Mode");
            this.getContentPane().setBackground(UIManager.getColor("Panel.background"));
            lblDark.setForeground(Color.BLACK);
            lblDefaultTxtColor.setForeground(Color.BLACK);
            lblMusic.setForeground(Color.BLACK);
        } else if (eOrD.equals("Enable")) {
            tglDark.setText("Disable");
            tglDark.setToolTipText("Disable Dark Mode");
            this.getContentPane().setBackground(Color.GRAY);
            lblDark.setForeground(Color.WHITE);
            lblDefaultTxtColor.setForeground(Color.WHITE);
            lblMusic.setForeground(Color.WHITE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPlayPause;
    private javax.swing.JButton btnPlayPause1;
    private javax.swing.JButton btnSelectColor;
    private javax.swing.JButton btn_Browse;
    public javax.swing.JTextField fileLocationField;
    private javax.swing.JLabel lblDark;
    private javax.swing.JLabel lblDefaultTxtColor;
    private javax.swing.JLabel lblMusic;
    private javax.swing.JLabel lblTextTest;
    private javax.swing.JToggleButton tglDark;
    // End of variables declaration//GEN-END:variables

}
